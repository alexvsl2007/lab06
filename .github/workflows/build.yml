name: Build and Package
on: [push, pull_request]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo apt-get update
          sudo apt-get install -y build-essential cmake dpkg-dev rpm
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          brew install cmake
        fi
        
    - name: Configure and Build
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build
        
    - name: Create Packages
      run: |
        cd build
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          cpack -G TGZ
          cpack -G DEB
          cpack -G RPM
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cpack -G WIX
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          cpack -G DragNDrop
        fi
